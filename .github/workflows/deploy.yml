name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get AWS Account ID and set ECR URI
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ECR_URI=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com" >> $GITHUB_ENV
          echo "IMAGE_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS --password-stdin $ECR_URI

      - name: Build, tag, and push backend
        run: |
          docker build -t tasktracker-backend ./backend
          docker tag tasktracker-backend:latest $ECR_URI/tasktracker-backend:$IMAGE_TAG
          docker push $ECR_URI/tasktracker-backend:$IMAGE_TAG

      - name: Build, tag, and push frontend
        run: |
          docker build -t tasktracker-frontend ./frontend
          docker tag tasktracker-frontend:latest $ECR_URI/tasktracker-frontend:$IMAGE_TAG
          docker push $ECR_URI/tasktracker-frontend:$IMAGE_TAG

      - name: Deploy to EC2 via SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e

            export ECR_URI=${ECR_URI}
            export AWS_REGION=${AWS_REGION}
            export IMAGE_TAG=${IMAGE_TAG}

            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI

            docker pull $ECR_URI/tasktracker-backend:$IMAGE_TAG
            docker pull $ECR_URI/tasktracker-frontend:$IMAGE_TAG

            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d

            docker ps
          EOF
