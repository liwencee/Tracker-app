name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set environment based on branch
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "TARGET_USER=${{ secrets.EC2_USER_PROD }}" >> $GITHUB_ENV
            echo "TARGET_HOST=${{ secrets.EC2_HOST_PROD }}" >> $GITHUB_ENV
          else
            echo "TARGET_USER=${{ secrets.EC2_USER_STAGING }}" >> $GITHUB_ENV
            echo "TARGET_HOST=${{ secrets.EC2_HOST_STAGING }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get AWS Account ID and set ECR URI
        id: get-ecr-uri
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ECR_URI=${ACCOUNT_ID}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ env.ECR_URI }}

      - name: Build, tag, and push backend image
        run: |
          docker build -t tasktracker-backend ./backend
          docker tag tasktracker-backend:latest ${{ env.ECR_URI }}/tasktracker-backend:${{ github.ref_name }}
          docker push ${{ env.ECR_URI }}/tasktracker-backend:${{ github.ref_name }}

      - name: Build, tag, and push frontend image
        run: |
          docker build -t tasktracker-frontend ./frontend
          docker tag tasktracker-frontend:latest ${{ env.ECR_URI }}/tasktracker-frontend:${{ github.ref_name }}
          docker push ${{ env.ECR_URI }}/tasktracker-frontend:${{ github.ref_name }}

      - name: Deploy to EC2
        env:
          TARGET_USER: ${{ env.TARGET_USER }}
          TARGET_HOST: ${{ env.TARGET_HOST }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_URI: ${{ env.ECR_URI }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$TARGET_HOST" >> ~/.ssh/known_hosts

          scp -i ~/.ssh/id_rsa docker-compose.prod.yml deploy.sh $TARGET_USER@$TARGET_HOST:/home/$TARGET_USER/
          scp -r -i ~/.ssh/id_rsa frontend backend $TARGET_USER@$TARGET_HOST:/home/$TARGET_USER/

          ssh -i ~/.ssh/id_rsa $TARGET_USER@$TARGET_HOST << EOF
            chmod +x /home/$TARGET_USER/deploy.sh
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI
            ./deploy.sh
          EOF
