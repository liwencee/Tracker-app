name: CI/CD EC2 Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy to ${{ matrix.env }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - env: staging
            HOST: ${{ secrets.STAGING_HOST }}
            USER: ${{ secrets.STAGING_USER }}
            SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          - env: production
            HOST: ${{ secrets.PROD_HOST }}
            USER: ${{ secrets.PROD_USER }}
            SSH_KEY: ${{ secrets.PROD_SSH_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          echo "${{ matrix.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add EC2 host to known_hosts
        run: |
          ssh-keyscan -H ${{ matrix.HOST }} >> ~/.ssh/known_hosts

      - name: Copy files to EC2
        run: |
          echo "Uploading deploy folder to ${{ matrix.env }} server..."
          scp -r ./deploy ${{ matrix.USER }}@${{ matrix.HOST }}:/home/${{ matrix.USER }}/

      - name: Run deployment on EC2
        run: |
          echo "Starting deployment on ${{ matrix.env }} server..."
          ssh ${{ matrix.USER }}@${{ matrix.HOST }} << 'EOF'
            set -e
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            cd deploy
            docker-compose pull
            docker-compose down
            docker-compose up -d
          EOF
