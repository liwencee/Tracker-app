name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

env:
  AWS_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend Docker image
        run: docker build -t tasktracker-backend ./backend

      - name: Build frontend Docker image
        run: docker build -t tasktracker-frontend ./frontend

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set ECR URI
        id: ecr
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ECR_URI=${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com" >> $GITHUB_ENV

      - name: Tag and Push backend image
        run: |
          docker tag tasktracker-backend:latest 600748199143.dkr.ecr.us-east-1.amazonaws.com/tasktracker-backend:latest
          docker push 600748199143.dkr.ecr.us-east-1.amazonaws.com/tasktracker-backend:latest
     
      - name: Tag and Push frontend image
        run: |
          docker tag tasktracker-frontend:latest 600748199143.dkr.ecr.us-east-1.amazonaws.com/tasktracker-frontend:latest
          docker push 600748199143.dkr.ecr.us-east-1.amazonaws.com/tasktracker-frontend:latest

  deploy-to-ec2:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'

    steps:
      - name: Set target based on branch
        id: target
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "HOST=${{ secrets.PROD_HOST }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.PROD_USER }}" >> $GITHUB_ENV
            echo "${{ secrets.PROD_SSH_KEY }}" > key.pem
          else
            echo "HOST=${{ secrets.STAGING_HOST }}" >> $GITHUB_ENV
            echo "USER=${{ secrets.STAGING_USER }}" >> $GITHUB_ENV
            echo "${{ secrets.STAGING_SSH_KEY }}" > key.pem
          fi
          chmod 600 key.pem

      - name: Deploy on EC2
        run: |
          ls  
          scp -o StrictHostKeyChecking=no -i key.pem docker-compose.yml $USER@$HOST:/home/$USER/
          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST << EOF
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ env.ECR_URI }}
            docker pull ${{ env.ECR_URI }}/tasktracker-backend:latest
            docker pull ${{ env.ECR_URI }}/tasktracker-frontend:latest
            cd /home/$USER
            docker-compose down
            docker-compose up -d
          EOF          

 